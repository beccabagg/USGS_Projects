# Automated Total Station Data Analyzer
# This script analyzes total station data to extract summary metadata data frames. It requires a CSV file to be uploaded by providing the local path to the file on your system.

# Requirements
- R version 4.4.2 or later
- The following R packages: dplyr, tidyr, xml2, shiny
#

# Installation
1. Install R from CRAN (https://cran.r-project.org/).
2. Install the required R packages by running the following commands in your R console:
install.packages(c("dplyr", "tidyr", "xml2", "shiny"))
#

# Running the Script
1. Save the script file TS_Automated_Data_Processor_20250218.R to your local machine.
2. Open RStudio or your preferred R environment.
3. Set your working directory to the location of the script file. For example:
setwd("C:/Users/rbaggott/Desktop")
4. Run the script by sourcing it:
source("TS_Automated_Data_Processor_20250218.R")
5. A Shiny web application will open in your default web browser.
#

# Using the Application
1. Upload CSV File: Click the "Upload CSV File" button and select your total station CSV file.
2. Analyze Data: Click the "Analyze Data" button to process the uploaded CSV file.
3. Update Summary: Enter the point name and Dial/Nail/Bolt reading, then click "Update Summary" to include them in the analysis.
4. Update Info: Enter the party name, site number, date, start time, and end time, then click "Update Info" to save these details.
5. Export to XML: Enter the object name to be renamed as BASE in the output XML, then click "Export to XML" to download the XML file.
#

# Data Included in the XML
The XML file generated by the application includes the following data:

Site Information:
- Site Identifier (organization code: USGS)
- Site Number

Site Visit Data:
- Start DateTime (with time datum code)
- End DateTime (with time datum code)
- Party Name
- Weather Description

Gaging Station Levels:
- Circuit Number
- Air Temperature (units: Fahrenheit)
- Starting Object Name
- Closure Error
- Closure Error Adjustment

Circuit Summary:
- Object Name (renamed as BASE if specified)
- Description
- Comment

Final Summary:
- Object Name
- Elevation Found
- Circuit Number
#

# Troubleshooting
- If the code fails to run, open the selected CSV file, select all cells, and format the numbers to 4 decimal places.
- Ensure that replicate point names are identical in spelling and case throughout the dataset.
#

# Important Requirements
- Replicate point names must be identical in spelling and case throughout the dataset. Correct any errors before import.
- This script requires 2 elevation values for each location. Additional values should be removed from the CSV prior to importing.
#

Developed By Rebecca Baggott
For assistance, contact rbaggott@usgs.gov.

# Script Details
## Loading Required Libraries
The script loads the required libraries (dplyr, tidyr, xml2, shiny). If any of these libraries are not installed, the script will install them automatically.
##
## User Interface
The Shiny web application provides a user-friendly interface for uploading CSV files, analyzing data, and exporting results to XML. The UI includes:
- File upload input for CSV files
- Buttons for analyzing data and updating summaries
- Text inputs for entering point names, Dial/Nail/Bolt readings, party names, site numbers, dates, and times
- Dropdown for selecting time datum codes
- Download button for exporting data to XML
##
## Server Logic
The server logic handles the following tasks:
- Reading and processing the uploaded CSV file
- Extracting metadata and total error values
- Splitting the data into multiple data frames based on blank rows
- Cleaning and formatting the data frames
- Calculating summary statistics for elevation values
- Updating summaries with user-provided Dial/Nail/Bolt readings
- Exporting the processed data to an XML file
## 
## XML Export
The XML export functionality generates an XML file with the following structure:
<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="http://water.usgs.gov/XML/AQ/stylesheets/AQSVMobile_SS1.xsl"?>
<UsgsHydroML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://water.usgs.gov/XML/AQ" schemaLocation="http://water.usgs.gov/XML/AQ http://water.usgs.gov/XML/AQ/schema/UsgsHydroML.xsd">
  <Site>
    <SiteIdentifier organizationCode="USGS">[Site Number]</SiteIdentifier>
    <SiteData>
      <SiteVisit>
        <StartDateTime timeDatumCode="[Time Datum Code]">[Start DateTime]</StartDateTime>
        <EndDateTime>[End DateTime]</EndDateTime>
        <PartyText>[Party Name]</PartyText>
        <WeatherDescription></WeatherDescription>
        <GagingStationLevels>
          <GagingStationLevelsCircuit>
            <CircuitNumber>1</CircuitNumber>
            <AirTemperature unitsCode="F"></AirTemperature>
            <StartingObjectName></StartingObjectName>
            <ClosureError>[Total Error]</ClosureError>
            <ClosureErrorAdjustment></ClosureErrorAdjustment>
            <CircuitSummary>
              <Object>
                <ObjectName>BASE</ObjectName>
                <Description></Description>
              </Object>
              <Comment></Comment>
            </CircuitSummary>
            <FinalSummary>
              <Object>
                <ObjectName>[Object Name]</ObjectName>
                <ElevationFound>[Average Elevation]</ElevationFound>
                <CircuitNumber>1</CircuitNumber>
              </Object>
            </FinalSummary>
          </GagingStationLevelsCircuit>
        </GagingStationLevels>
      </SiteVisit>
    </SiteData>
  </Site>
</UsgsHydroML>
## 
#